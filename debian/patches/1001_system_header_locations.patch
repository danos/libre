Description: Avoid hardcoded locations of system headers
 libre checks for header existence
 by searching them in a few filesystem locations.
 Debian's /usr/include/<triplet> is not always among those locations
 and that makes libre fail to build when built
 against a non-glibc or a glibc with multiarch headers
 (see <https://bugs.debian.org/798955>).
 This patch replaces those file existence tests with compile tests.
 The compiler knows much better whether headers exists.
Author: Helmut Grohne <helmut@subdivi.de>
Bug-Debian: https://bugs.debian.org/911358
Last-Update: 2018-10-19
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/mk/re.mk
+++ b/mk/re.mk
@@ -449,22 +449,19 @@
 # External libraries section
 #
 
-USE_OPENSSL := $(shell [ -f $(SYSROOT)/include/openssl/ssl.h ] || \
-	[ -f $(SYSROOT)/local/include/openssl/ssl.h ] || \
-	[ -f $(SYSROOT_ALT)/include/openssl/ssl.h ] && echo "yes")
+USE_OPENSSL := $(shell echo '\#include <openssl/ssl.h>' | \
+	$(CC) -E - >/dev/null 2>&1 && echo "yes")
 
 ifneq ($(USE_OPENSSL),)
 CFLAGS  += -DUSE_OPENSSL -DUSE_TLS
 LIBS    += -lssl -lcrypto
 USE_TLS := yes
 
-USE_OPENSSL_DTLS := $(shell [ -f $(SYSROOT)/include/openssl/dtls1.h ] || \
-	[ -f $(SYSROOT)/local/include/openssl/dtls1.h ] || \
-	[ -f $(SYSROOT_ALT)/include/openssl/dtls1.h ] && echo "yes")
-
-USE_OPENSSL_SRTP := $(shell [ -f $(SYSROOT)/include/openssl/srtp.h ] || \
-	[ -f $(SYSROOT)/local/include/openssl/srtp.h ] || \
-	[ -f $(SYSROOT_ALT)/include/openssl/srtp.h ] && echo "yes")
+USE_OPENSSL_DTLS := $(shell echo '\#include <openssl/dtls1.h>' | \
+	$(CC) -E - >/dev/null 2>&1 && echo "yes")
+
+USE_OPENSSL_SRTP := $(shell echo '\#include <openssl/srtp.h>' | \
+	$(CC) -E - >/dev/null 2>&1 && echo "yes")
 
 ifneq ($(USE_OPENSSL_DTLS),)
 CFLAGS  += -DUSE_OPENSSL_DTLS -DUSE_DTLS
@@ -482,9 +479,8 @@
 endif
 
 
-USE_ZLIB    := $(shell [ -f $(SYSROOT)/include/zlib.h ] || \
-	[ -f $(SYSROOT)/local/include/zlib.h ] || \
-	[ -f $(SYSROOT_ALT)/include/zlib.h ] && echo "yes")
+USE_ZLIB    := $(shell echo '\#include <zlib.h>' | \
+	$(CC) -E - >/dev/null 2>&1 && echo "yes")
 
 ifneq ($(USE_ZLIB),)
 CFLAGS  += -DUSE_ZLIB
@@ -494,7 +490,8 @@
 
 ifneq ($(OS),win32)
 
-HAVE_PTHREAD    := $(shell [ -f $(SYSROOT)/include/pthread.h ] && echo "1")
+HAVE_PTHREAD    := $(shell echo '\#include <pthread.h>' | \
+	$(CC) -E - >/dev/null 2>&1 && echo "1")
 ifneq ($(HAVE_PTHREAD),)
 HAVE_PTHREAD_RWLOCK := 1
 CFLAGS  += -DHAVE_PTHREAD
@@ -505,7 +502,8 @@
 endif
 
 ifneq ($(ARCH),mipsel)
-HAVE_GETIFADDRS := $(shell [ -f $(SYSROOT)/include/ifaddrs.h ] && echo "1")
+HAVE_GETIFADDRS := $(shell echo '\#include <ifaddrs.h>' | \
+	$(CC) -E - >/dev/null 2>&1 && echo "1")
 ifneq ($(HAVE_GETIFADDRS),)
 CFLAGS  += -DHAVE_GETIFADDRS
 endif
@@ -518,22 +516,24 @@
 
 endif
 
-HAVE_GETOPT     := $(shell [ -f $(SYSROOT)/include/getopt.h ] && echo "1")
+HAVE_GETOPT     := $(shell echo '\#include <getopt.h>' | \
+	$(CC) -E - >/dev/null 2>&1 && echo "1")
 ifneq ($(HAVE_GETOPT),)
 CFLAGS  += -DHAVE_GETOPT
 endif
-HAVE_INTTYPES_H := $(shell [ -f $(SYSROOT)/include/inttypes.h ] && echo "1")
+HAVE_INTTYPES_H := $(shell echo '\#include <inttypes.h>' | \
+	$(CC) -E - >/dev/null 2>&1 && echo "1")
 ifneq ($(HAVE_INTTYPES_H),)
 CFLAGS  += -DHAVE_INTTYPES_H
 endif
-HAVE_NET_ROUTE_H := $(shell [ -f $(SYSROOT)/include/net/route.h ] && echo "1")
+HAVE_NET_ROUTE_H := $(shell echo '\#include <net/route.h>' | \
+	$(CC) -E - >/dev/null 2>&1 && echo "1")
 ifneq ($(HAVE_NET_ROUTE_H),)
 CFLAGS  += -DHAVE_NET_ROUTE_H
 endif
 HAVE_SYS_SYSCTL_H := \
-	$(shell [ -f $(SYSROOT)/include/sys/sysctl.h ] || \
-		[ -f $(SYSROOT)/include/$(MACHINE)/sys/sysctl.h ] \
-		&& echo "1")
+	$(shell echo '\#include <sys/sysctl.h>' | \
+		$(CC) -E - >/dev/null 2>&1 && echo "1")
 ifneq ($(HAVE_SYS_SYSCTL_H),)
 CFLAGS  += -DHAVE_SYS_SYSCTL_H
 endif
@@ -549,15 +549,17 @@
 CFLAGS  += -DHAVE_SELECT
 CFLAGS  += -DHAVE_IO_H
 else
-HAVE_SYSLOG  := $(shell [ -f $(SYSROOT)/include/syslog.h ] && echo "1")
-HAVE_DLFCN_H := $(shell [ -f $(SYSROOT)/include/dlfcn.h ] && echo "1")
+HAVE_SYSLOG  := $(shell echo '\#include <syslog.h>' | \
+	$(CC) -E - >/dev/null 2>&1 && echo "1")
+HAVE_DLFCN_H := $(shell echo '\#include <dlfcn.h>' | \
+	$(CC) -E - >/dev/null 2>&1 && echo "1")
 ifneq ($(OS),darwin)
-HAVE_EPOLL   := $(shell [ -f $(SYSROOT)/include/sys/epoll.h ] || \
-			[ -f $(SYSROOT)/include/$(MACHINE)/sys/epoll.h ] \
-			&& echo "1")
+HAVE_EPOLL   := $(shell echo '\#include <sys/epoll.h>' | \
+			$(CC) -E - >/dev/null 2>&1 && echo "1")
 endif
 
-HAVE_RESOLV := $(shell [ -f $(SYSROOT)/include/resolv.h ] && echo "1")
+HAVE_RESOLV := $(shell echo '\#include <resolv.h>' | \
+	$(CC) -E - >/dev/null 2>&1 && echo "1")
 
 ifneq ($(HAVE_RESOLV),)
 CFLAGS  += -DHAVE_RESOLV
